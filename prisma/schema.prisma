// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String        @id @default(uuid())
  name               String
  email              String        @unique
  password           String
  role               RoleEnumType? @default(user)
  verificationCode   String?       @unique @db.Text
  verified           Boolean       @default(false)
  provider           String        @default("local")
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  orders             Order[]
  passwordResetToken String?
  passwordResetAt    DateTime?

  @@index([email, verificationCode])
  @@map("users")
}

enum RoleEnumType {
  user
  admin
}

model Order {
  id              Int         @id @default(autoincrement())
  supplier        String
  additionalNotes String?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  orderLines      OrderLine[]
  User            User?       @relation(fields: [userId], references: [id])
  userId          String?
  status          OrderStatus @default(processing)
}

enum OrderStatus {
  pending
  processing
  completed
  cancelled
}

model OrderLine {
  id        Int      @id @default(autoincrement())
  quantity  Int
  orderId   Int
  order     Order    @relation(fields: [orderId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id                   Int         @id @default(autoincrement())
  createdAt            DateTime    @default(now())
  updatedAt            DateTime    @updatedAt
  itemName             String
  itemCategory         String
  stockKeepingUnit     String
  unit                 String
  universalProductCode String? // '?' denotes that the field is optional
  manufacturer         String?
  salesPrice           Float
  salesAccount         String
  salesDescription     String?
  purchasePrice        Float
  purchaseAccount      String
  purchaseDescription  String?
  openingStockValue    Float?
  reorderValue         Float?
  OrderLine            OrderLine[]
}
